{"version":3,"sources":["util.ts","dashboardlogo.tsx","dashboardnavbar.tsx","mainsidebar.tsx","sidebartoggle.tsx","sidebarmenu.tsx","sidebarheader.tsx","header.tsx","content.tsx","navbarmenu.tsx","dashboardcontainer.tsx","canvaswidget.tsx","nodestuff.ts","Details.tsx","graphview.tsx","project.ts","treeviewmenu.tsx","treeviewitemcontainer.tsx","textinput.tsx","graphviewer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GetLinkProperty","link","prop","properties","LinkPropertyKeys","NodeProperties","DashboardLogo","href","className","style","zIndex","position","this","props","word","Component","Header","children","relative","overflow","maxHeight","overflowY","notactive","minHeight","height","SidebarToggle","onClick","data-toggle","role","SideBarMenu","SideBarHeader","cursor","title","Content","flex","display","NavBarMenu","paddingRight","DashboardContainer","state","minified","sideBar","SContainer","styled","div","p","background","color","CanvasWidget","React","NodeTypes","NodeTypeColors","Details","currentPart","nodeType","getConceptExplanation","getModelExplanation","getAgentAccessDescription","getDataChainDescription","summary","map","v","key","name","getSummary","parts","executionSumary","ExecutionSummary","length","getStructuredSummary","permissionSummary","PermissionSummary","validationSummary","ValidationSummary","getExtraInformation","SBody","SHeader","SContent","SLayer","SFLayer","GUID","replace","c","r","Math","random","toString","context","GraphView","engine","autoDistribute","redistribute","activeModel","reroute","repaintCanvas","id","DagreEngine","graph","rankdir","ranker","marginx","marginy","nodesep","includeLinks","bind","setup","newModel","SRD","createEngine","setModel","getLinkFactories","getFactory","PathFindingLinkFactory","NAME","calculateRoutingMatrix","prevProps","prevState","snapshot","graphViewPackage","setupGraphView","setTimeout","links","nodes","me","dnodes","forEach","node","dnode","createNode","text","GetNodeTitle","getNodes","removeNode","getLinks","removeLink","index","setPosition","addNode","registerListener","eventDidFire","a","function","setState","currentNode","newLink","connectNodes","source","target","addLink","nodeFrom","nodeTo","portOut","addPort","DefaultPortModel","portTo","DefaultNodeModel","currentGraph","GetNodeProp","details","find","onDrop","onDragOver","event","preventDefault","TreeViewMenu","active","greyed","open","icon","error","fontWeight","hide","description","toggle","hideIcon","hideArrow","evt","onRightClick","right","innerStyle","TreeViewItemContainer","TextInput","inputType","label","immediate","value","placeholder","disabled","light","focused","handleKeyPress","onChange","textarea","inputgroup","onBlur","onChanged","onFocus","onKeyPress","onChangeText","slim","type","e","stopPropagation","GraphViewer","project","Projects","url","fetch","then","res","json","obj","getSideBar","result","items","filter","toLowerCase","indexOf","groups","reduce","rv","x","push","val","Object","entries","item","newurl","window","location","protocol","host","pathname","history","pushState","path","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f95cb589.chunk.js","sourcesContent":["\r\nexport function GetLinkProperty(link: any, prop: any) {\r\n\treturn link && link.properties && link.properties[prop];\r\n}\r\n\r\nexport function GetNodeProp(node: any, prop: string, currentGraph?: any) {\r\n\treturn node && node.properties && node.properties[prop];\r\n}\r\n\r\nexport function GetNodeTitle(node: any) {\r\n\tif (!node) {\r\n\t\treturn 'Unknown';\r\n\t}\r\n\treturn node.properties ? node.properties.text || node.id : node.id;\r\n}\r\n\r\nexport const LinkPropertyKeys = {\r\n\tTYPE: 'type',\r\n\tCONSTRAINTS: 'constraints',\r\n\tVALID_CONSTRAINTS: 'valid-constraints',\r\n\tBeforeCall: 'BeforeCall',\r\n\tFUNCTION_ID: 'function-id',\r\n\tInstanceUpdate: 'InstanceUpdate',\r\n\tComponentTag: 'ComponentTag',\r\n\tSibling: 'sibling',\r\n\tParameters: 'parameters',\r\n\tModel: 'model',\r\n\tViewModelKey: 'viewModelKey',\r\n\tModelKey: 'modelKey',\r\n\tComponentStyle: 'ComponentStyle',\r\n\tMethodProps: 'methodProps',\r\n\tMountingProps: 'mountingProps',\r\n\tScreenEffectApiProps: 'screenEffectApiProps',\r\n\tDashboardScreenEffectApiProps: 'dashboardScreenEffectApiProps',\r\n\tRoutingProps: 'routingProps',\r\n\tEffectProps: 'effectProps',\r\n\tComponentProperty: 'ComponentProperty',\r\n\tViewType: 'viewType',\r\n\tDashboardAccessProps: 'dashboardAccessProps',\r\n\tDashboardViewMountProps: 'dashboardViewMountProps',\r\n\tDashboardRoutingProps: 'dashboardRoutingProps',\r\n\tDashboardEffectProps: 'dashboardEffectProps',\r\n\tAgentAccess: 'AgentAccess',\r\n\tRoutingDescriptionId: 'RoutingDescriptionId',\r\n\tEnumeration: 'Enumeration',\r\n\tAsForm: 'AsForm',\r\n\tDefaultValue: 'DefaultValue'\r\n};\r\n\r\nexport const NodeProperties = {\r\n\tViewPackage: 'view-package',\r\n\tIsFetchOutput: 'IsFetchOutput',\r\n\tUIActionMethod: 'UIActionMethod',\r\n\tHideStyle: 'HideStyle',\r\n\tIsPropertyCentric: 'IsPropertyCentric',\r\n\tRouteInjection: 'RouteInjection',\r\n\tPropertyCentricType: 'PropertyCentricType',\r\n\tPropertyBeingUsed: 'PropertyBeingUsed',\r\n\tIsFetchParameter: 'IsFetchParameter',\r\n\tOriginalConfig: 'OriginalConfig',\r\n\tViewModelKey: 'ViewModelKey',\r\n\tDataChainPurpose: 'DataChainPurpose',\r\n\tUserOfAgent: 'UserOfAgent',\r\n\tStateKey: 'StateKey',\r\n\tAutoCalculate: 'AutoCalculate',\r\n\tDefaultPropertyValueType: 'DefaultPropertyValueType',\r\n\tDefaultPropertyValue: 'DefaultPropertyValue',\r\n\tSwaggerNode: 'SwaggerNode',\r\n\tSwaggerClassName: 'SwaggerClassName',\r\n\tGridPlacement: 'GridPlacement',\r\n\tCompleteFunction: 'CompleteFunction',\r\n\tArbiterModels: 'ArbiterModels',\r\n\tIsFetchDataChainStorage: 'IsFetchDataChainStorage',\r\n\tIsDashboard: 'IsDashboard',\r\n\tGridRowCount: 'GridRowCount',\r\n\tMergeNode: 'MergeNode',\r\n\tDataChainTypeName: 'DataChainTypeName',\r\n\tDataChainSourceFile: 'DataChainSourceFile',\r\n\tDataChainTypeCategory: 'DataChainTypeCategory',\r\n\tIsHomeLaunchView: 'IsHomeLaunchView',\r\n\tUseDefaultValue: 'UseDefaultValue',\r\n\tDefaultValue: 'DefaultValue',\r\n\tHoverStyle: ':hover',\r\n\tIsRoot: 'composition-isRoot',\r\n\tAfterEffectMethodChain: 'AfterEffectMethodChain',\r\n\tIsHomeView: 'IsHomeView',\r\n\tAsLocalContext: 'AsLocalContext',\r\n\tGeneratedConcept: 'GeneratedConcept',\r\n\tDataChainName: 'DataChainName',\r\n\tActiveStyle: ':active',\r\n\tThemes: 'Themes',\r\n\tIsCompositionLeaf: 'IsCompositionLeaf',\r\n\tSharedReferenceCollection: 'SharedReferenceCollection',\r\n\tBeforeStyle: '::before',\r\n\tValidationConfigurationItem: 'ValidationConfigurationItem',\r\n\tAfterEffectKey: 'AfterEffectKey',\r\n\tGridAreas: 'GridAreas',\r\n\tAfterStyle: '::after',\r\n\tLastViewPackage: 'LastViewPackage',\r\n\tMediaQuery: 'MediaQuery',\r\n\tUseMediaQuery: 'UseMediaQuery',\r\n\tUseValue: 'UseValue',\r\n\tCheckedStyle: ':checked',\r\n\tDisabledStyle: ':disabled',\r\n\tEmptyStyle: ':empty',\r\n\tEnabledStyle: ':enabled',\r\n\tFirstChildStyle: ':first-child',\r\n\tLastChildStyle: ':last-child',\r\n\tFocusStyle: ':focus',\r\n\tReadOnlyStyle: ':read-only',\r\n\tDefaultComponentApiValue: 'DefaultComponentApiValue',\r\n\tExcludeFromGeneration: 'ExcludeFromGeneration',\r\n\tViewPackageTitle: 'view-package-title',\r\n\tComponentApi: 'component-api',\r\n\tDefaultViewModel: 'DefaultViewModel',\r\n\tSelectorType: 'selector-type',\r\n\tUseInstanceType: 'UseInstanceType',\r\n\tSharedComponent: 'SharedComponent',\r\n\tEventType: 'EventType',\r\n\tEnabledMenu: 'EnabledMenu',\r\n\tInstanceType: 'InstanceType',\r\n\tComponentParameters: 'ComponentParameters',\r\n\tNavigationParameters: 'NavigationParameters',\r\n\tUseNavigationParams: 'UseNavigationParams',\r\n\tClientMethod: 'ClientMethod',\r\n\tMethodParameters: 'MethodParameters',\r\n\tNavigationParametersProperty: 'NavigationParametersProperty',\r\n\tExecuteButton: 'ExecuteButton',\r\n\tMethodParameterProperty: 'MethodParameterProperty',\r\n\tScreenParameters: 'ScreenParameters',\r\n\tMethod: 'Method',\r\n\tSelectedLayoutCell: 'SelectedLayoutCell',\r\n\tChainParent: 'ChainParent',\r\n\tNavigation: 'Navigation',\r\n\tValidationMethodTarget: 'ValidationMethodTarget',\r\n\tClientMethodParameters: 'ClientMethodParameters',\r\n\tDashboardViewComponent: 'DashboardViewComponent',\r\n\tAsOutput: 'AsOutput',\r\n\tUIAgnostic: 'UIAgnostic',\r\n\tEntryPoint: 'EntryPoint',\r\n\tCSEntryPoint: 'CSEntryPoint',\r\n\tCS: 'CS',\r\n\tIsUserOfAgentType: 'IsUserOfAgentType',\r\n\tUpdateAgentPostRegistrationMethod: 'UpdateAgentPostRegistrationMethod',\r\n\tProperty: 'Property',\r\n\tDataChainEntry: 'DataChainEntry',\r\n\tMergeChain: 'MergeChain',\r\n\tComponentProperties: 'ComponentProperties',\r\n\tLayout: 'Layout',\r\n\tDomain: 'Domain',\r\n\tPriority: 'Priority',\r\n\tDataChain: 'DataChain',\r\n\tOnBlur: 'onBlur',\r\n\tSelector: 'Selector',\r\n\tScreenOption: 'ScreenOption',\r\n\tSelectorProperty: 'SelectorProperty',\r\n\tValue: 'Value',\r\n\tContextParams: 'ContextParams',\r\n\tvalue: 'value',\r\n\tNumber: 'Number',\r\n\tOnFocus: 'onFocus',\r\n\tOnChange: 'onChangeText',\r\n\tSharedMenuCollection: 'SharedMenuCollection',\r\n\tUIType: 'UIType',\r\n\tDashboardButtons: 'DashboardButtons',\r\n\tTextType: 'TextType',\r\n\tEnumeration: 'Enumeration',\r\n\tConditionType: 'ConditionType',\r\n\tMatchReference: 'MatchReference',\r\n\tMatchManyReferenceParameter: 'MatchManyReferenceParameter',\r\n\tEnumerationReference: 'EnumerationReference',\r\n\tAllowedExtensionValues: 'AllowedExtensionValues',\r\n\tServiceType: 'ServiceType',\r\n\tDisallowedExtensionValues: 'DisallowedExtensionValues',\r\n\tAllowedEnumValues: 'AllowedEnumerationValue',\r\n\tDisallowedEnumValues: 'DisallowedEnumValues',\r\n\tCondition: 'Condition',\r\n\tServiceTypeSettings: 'ServiceTypeSettings',\r\n\tValidatorModel: 'ValidatorModel',\r\n\tExecutorAgent: 'ExecutorAgent',\r\n\tExecutorFunction: 'ExecutorFunction',\r\n\tExecutorModel: 'ExecutorModel',\r\n\tExecutorModelOutput: 'ExecutorModelOutput',\r\n\tExecutorFunctionType: 'ExecutorFunctionType',\r\n\tValidatorFunction: 'ValidatorFunction',\r\n\tUseEnumeration: 'UseEnumeration',\r\n\tNameSpace: 'namespace',\r\n\tFilterModel: 'filtermodel',\r\n\tFilterAgent: 'filteragent',\r\n\tValidator: 'Validator',\r\n\tModelItemFilter: 'ModelItemFilter',\r\n\tExecutor: 'Executor',\r\n\tValidatorAgent: 'ValidatorAgent',\r\n\tCollapsed: 'collapsed',\r\n\tUseExtension: 'usextension',\r\n\tIncludedInList: 'includedInList',\r\n\tIsShared: 'IsShared',\r\n\tPinned: 'Pinned',\r\n\tUseInView: 'UseInView',\r\n\tSelected: 'Selected',\r\n\tExcludedFromList: 'excludedInList',\r\n\tIgnoreInView: 'IgnoreInView',\r\n\tUseEqual: 'UseEqual',\r\n\tIsEqualTo: 'IsEqualTo',\r\n\tCodeUser: 'codeUser',\r\n\tHttpRoute: 'HttpRoute',\r\n\tHttpMethod: 'HttpMethod',\r\n\tExcludeFromController: 'ExcludeFromController',\r\n\tIsAgent: 'isAgent',\r\n\tCancelButton: 'CancelButton',\r\n\tIsCompositeInput: 'IsCompositeInput',\r\n\tIsParent: 'isParent', //This is a program setting. Just for allowing us to hide and show the model picker.\r\n\tIsUser: 'IsUser', //User is the object directly associated with a IdentityProvider.\r\n\tIsOwnedByAgents: 'IsOwnedByAgents',\r\n\tUIUser: 'uiUser',\r\n\tIsSharedResource: 'isSharedResource', // Not sure if this helps anything.\r\n\tUIPermissions: 'uiPermissions',\r\n\tIsOwned: 'isOwned',\r\n\tUIName: 'uiName', // The name used in the ui.\r\n\tQueryParameterObjectExtendible: 'QueryParameterObjectExtendible',\r\n\tQueryParameterObject: 'QueryParameterObject',\r\n\tQueryParameterParam: 'QueryParameterParam',\r\n\tDefaultAgent: 'DefaultAgent',\r\n\tQueryParameterParamType: 'QueryParameterParamType',\r\n\tTemplateParameter: 'TemplateParameter',\r\n\tTemplateParameterType: 'TemplateParameterType',\r\n\tIsQuery: 'query',\r\n\tAutoDelete: 'AutoDelete', // Anything matching the properties etc, will auto delete along with the current node.\r\n\tUriBody: 'UriBody',\r\n\tUriParameter: 'UriParameter',\r\n\tNodePackage: 'NodePackage',\r\n\tNodePackageType: 'NodePackageType',\r\n\tNodePackageAgent: 'NodePackageAgent',\r\n\tIsPagingModel: 'IsPagingModel',\r\n\tPagingSkip: 'Skip',\r\n\tIsPaging: 'IsPaging',\r\n\tPagingTake: 'Take',\r\n\tPagingFilter: 'Filter',\r\n\tPagingSort: 'PagingSort',\r\n\tIsViewModel: 'IsViewModel',\r\n\t// ComponentApiKey: 'ComponentApiKey',\r\n\tIsDataChainPagingSkip: 'IsDataChainPagingSkip',\r\n\tBooleanType: 'composition-boolean',\r\n\tIsDataChainPagingTake: 'IsDataChainPagingTake',\r\n\tUIText: 'text',\r\n\tTarget: 'Target',\r\n\tSwaggerPath: 'SwaggerPath',\r\n\tUseAsValue: 'UseAsValue',\r\n\tIsUrlParameter: 'IsUrlParameter',\r\n\tPermissionSummary: 'PermissionSummary',\r\n\tValidationSummary: 'ValidationSummary',\r\n\tExecutionSummary: 'ExecutionSummary',\r\n\tNavigationAction: 'NavigationAction',\r\n\tAgentBasedMethod: 'AgentBasedMethod',\r\n\tViewType: 'view-type',\r\n\r\n\tIsReferenceList: 'isReferenceList',\r\n\tUseHttps: 'UseHttps',\r\n\tDescription: 'description',\r\n\tIsSwagger: 'IsSwagger',\r\n\tSwaggerMethodDefinition: 'SwaggerMethodDefinition',\r\n\tSwaggerEndpoint: 'SwaggerEndpoint',\r\n\tUISingular: 'uiSingular',\r\n\tUIChoice: 'uiChoice',\r\n\tUIChoiceType: 'uiChoiceType',\r\n\tUIChoiceNode: 'uiChoiceNode', //A node that the \"parameter\" node points to.\r\n\tPermissionRequester: 'permissions-requester', // The agent that is requesting permission to do something\r\n\tPermissionManyToMany: 'permissions-many-to-many',\r\n\tMatchIds: 'matchs-ids',\r\n\tConnectionExists: 'connection-exists',\r\n\tPermissionTarget: 'permissions-target',\r\n\t// Property has a dependent property\r\n\tUIDependsOn: 'uiDependsOn',\r\n\tUseUIDependsOn: 'UseuiDependsOn',\r\n\tUseUIOptions: 'UseuiOptions',\r\n\tUIOptionType: 'uiOptionType',\r\n\r\n\t//Use a custom option\r\n\tUseCustomUIOption: 'useCustomUIOption',\r\n\tUIOptionTypeCustom: 'uiOptionTypeCustom',\r\n\t//An option\r\n\tUIOption: 'uiOption',\r\n\t//Use Extensions\r\n\tUseUIExtensionList: 'UseuiExtensionList',\r\n\tUIExtensionList: 'uiExtensionList',\r\n\tUIExtension: 'uiExtension',\r\n\tUIExtensionDefinition: 'uiExtensionDefinition',\r\n\tLabel: 'Label',\r\n\tError: 'Error',\r\n\tPlaceholder: 'Placeholder',\r\n\tOptions: 'Options',\r\n\tSuccess: 'Success',\r\n\tStyle: 'Style',\r\n\tMethodProps: 'methodProperties',\r\n\tFilterPropreties: 'filterproperties',\r\n\tUIValidationType: 'uiValidationType',\r\n\tUseUIValidations: 'UseuiValidations',\r\n\tNODEType: 'nodeType',\r\n\tDefaultViewTypeGet: 'DefaultViewTypeGet',\r\n\tDefaultViewTypeGetAll: 'DefaultViewTypeGetAll',\r\n\tDefaultViewTypeUpdate: 'DefaultViewTypeUpdate',\r\n\tDefaultViewTypeDelete: 'DefaultViewTypeDelete',\r\n\tDefaultViewTypeCreate: 'DefaultViewTypeCreate',\r\n\tComponentType: 'component-type',\r\n\tUsingSharedComponent: 'UsingSharedComponent',\r\n\tReferenceType: 'referenceType', //Reference nodes will have this type.\r\n\r\n\tComponentDidMountEvent: 'component-did-mount',\r\n\tUIAttributeType: 'uiAttributeType',\r\n\tPermissionValueType: 'PermissionValueType',\r\n\tUseModelAsType: 'useModelAsType',\r\n\r\n\tIsDefaultProperty: 'isDefaultProperty',\r\n\tExecuteComponent: 'ExecuteComponent',\r\n\r\n\tHasLogicalChildren: 'hasLogicalChildren',\r\n\tLogicalChildrenTypes: 'logicalChildrenTypes',\r\n\tHasLogicalNieces: 'hasLogicalNieces',\r\n\tLogicalNieceTypes: 'logicalNieceTypes',\r\n\tValidationPropertyName: 'ValidationPropertyName',\r\n\tIsPluralComponent: 'IsPluralComponent',\r\n\tDataGenerationType: 'data-generation-type',\r\n\r\n\tManyToManyNexus: 'manyToManyNexux',\r\n\tManyToManyNexusType: 'manyToManyNexusType',\r\n\tManyToManyNexusTypes: 'manyToManyNexusTypes',\r\n\r\n\tMethodType: 'MethodType',\r\n\tChainNodeInput2: 'ChainNodeInput2',\r\n\tScreenInstance: 'ScreenInstance',\r\n\tModel: 'Model',\r\n\tNavigationScreen: 'NavigationScreen',\r\n\tAgent: 'Agent',\r\n\tScreen: 'Screen',\r\n\tChainNodeInput1: 'ChainNodeInput1',\r\n\tList: 'List',\r\n\tUIModelType: 'uiModelType',\r\n\tIsTypeList: 'IsTypeList',\r\n\tDataChainReferences: 'DataChainReferences',\r\n\tLambda: 'Lambda',\r\n\tLambdaInsertArguments: 'LambdaInsertArguments',\r\n\tRouteSource: 'RouteSource',\r\n\tParameterName: 'ParameterName',\r\n\tEventArgumentType: 'EventArgumentType',\r\n\tTargetProperty: 'TargetProperty',\r\n\tModelKey: 'ModelKey',\r\n\tDataChainReference: 'DataChainReference',\r\n\tNumberParameter: 'NumberParameter',\r\n\r\n\tUseScopeGraph: 'UseScopeGraph',\r\n\tScopeGraph: 'scopedGraph',\r\n\r\n\tDataChainFunctionType: 'DataChainFunctionType',\r\n\tDataChainNameSpace: 'DataChainNameSpace',\r\n\tDataChainProperty: 'DataChainProperty',\r\n\tQueryParameterType: 'QueryParameterType',\r\n\tComponent: 'Component',\r\n\r\n\tAfterMethod: 'after-method',\r\n\tAfterMethodSetup: 'after-method-setup',\r\n\r\n\t//The name used for code.\r\n\tGroups: 'groups',\r\n\tGroupParent: 'groupParent',\r\n\tCodeName: 'codeName',\r\n\tCssName: 'cssName',\r\n\tValueName: 'valueName', //The name of the instance variable to be used\r\n\tAgentName: 'agentName', //The name of the instance variable to be used\r\n\tCodePropertyType: 'codeProperty',\r\n\tFunctionType: 'functionType',\r\n\tMethodFunctionValidation: 'method-function-validation',\r\n\tNotIncludedInController: 'not-included-in-controller',\r\n\tPermissionImpl: 'permission-implementation',\r\n\tNoApiPrefix: 'no-api-prefix',\r\n\tAsForm: 'as-form',\r\n\tCollectCookies: 'collect-cookies',\r\n\tAsText: 'as-text',\r\n\tClassConstructionInformation: 'ClassConstructionInformation',\r\n\tDataChainCollection: 'DataChainCollection'\r\n};\r\nexport interface Node {\r\n\tproperties: any;\r\n\tpropertyVersions?: { [index: string]: any };\r\n\tid: string;\r\n\tdirty: any;\r\n}\r\n\r\n\r\nexport function groupBy(xs: any[], key: Function) {\r\n\treturn xs.reduce(function(rv, x) {\r\n\t\t(rv[key(x)] = rv[key(x)] || []).push(x);\r\n\t\treturn rv;\r\n\t}, {});\r\n}","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class DashboardLogo extends Component<any, any> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<a\r\n\t\t\t\thref=\"\"\r\n\t\t\t\tclassName=\"logo\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tzIndex: 11000,\r\n\t\t\t\t\tposition: 'absolute'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"logo-mini\">\r\n\t\t\t\t\t<b>R</b>QB\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"logo-lg\">\r\n\t\t\t\t\t<b>Red</b>\r\n\t\t\t\t\t{this.props.word || 'QuickBuilder'}\r\n\t\t\t\t</span>\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Header extends Component<any, any> {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav className=\"navbar navbar-static-top\" >\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Header extends Component<any, any> {\r\n\trelative() {\r\n\t\treturn this.props.relative ? {} : {};\r\n\t}\r\n\toverflow() {\r\n\t\treturn this.props.overflow ? { maxHeight: '100vh', overflowY: 'auto' } : {};\r\n\t}\r\n\trender() {\r\n\t\tif (this.props.notactive) {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t\tlet style: any = { minHeight: 0, ...this.relative(), ...this.overflow() };\r\n\t\treturn (\r\n\t\t\t<aside className={`main-sidebar`} style={style}>\r\n\t\t\t\t<section className=\"sidebar\" style={{ height: 'auto' }}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</section>\r\n\t\t\t</aside>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SidebarToggle extends Component<any, any> {\r\n    render() {\r\n        \r\n        return (\r\n            <a\r\n                onClick={() => {\r\n                    // me.props.toggleDashboardMinMax();\r\n                }}\r\n                className=\"sidebar-toggle\"\r\n                data-toggle=\"push-menu\" role=\"button\">\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class SideBarMenu extends Component<any, any> {\r\n    render() {\r\n        return (\r\n            <ul className=\"sidebar-menu tree control-sidebar-dark\">\r\n                {this.props.children}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class SideBarHeader extends Component<any, any> {\r\n  render() {\r\n    return (\r\n      <li\r\n        className=\"header\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={this.props.onClick}\r\n      >\r\n        {this.props.title}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Header extends Component<any, any> {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\" >\r\n                {this.props.children}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Content extends Component<any, any> {\r\n\trender() {\r\n\t\tlet style = {};\r\n\t\tif (this.props.flex) {\r\n\r\n\t\t\tstyle = { display: 'flex', flex: 1 }\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"content-wrapper\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tminHeight: 'calc(100vh-50px)',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\toverflowY: 'scroll',\r\n\t\t\t\t\t...style\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class NavBarMenu extends Component<any, any> {\r\n    render() {\r\n        let style: any = {};\r\n        if (this.props.paddingRight) {\r\n            style.paddingRight = this.props.paddingRight;\r\n        }\r\n        if (this.props.style) {\r\n            style = { ...style, ...this.props.style };\r\n        }\r\n        return (\r\n            <div className=\"navbar-custom-menu\" style={style}>\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.props.children}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport DashboardLogo from './dashboardlogo';\r\nimport DashboardNavBar from './dashboardnavbar';\r\nimport MainSideBar from './mainsidebar';\r\nimport SidebarToggle from './sidebartoggle';\r\nimport SideBarMenu from './sidebarmenu';\r\nimport SideBarHeader from './sidebarheader';\r\nimport Header from './header';\r\nimport Content from './content';\r\nimport NavBarMenu from './navbarmenu';\r\n\r\nexport default class DashboardContainer extends Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\tminified() {\r\n\t\treturn this.props.minified ? 'sidebar-collapse' : '';\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`skin-red sidebar-mini skin-red`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: 'auto',\r\n\t\t\t\t\tminHeight: '100vh'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"wrapper\" style={{ height: '100vh' }}>\r\n\t\t\t\t\t<Header>\r\n\t\t\t\t\t\t<DashboardLogo word=\"Viewer\" />\r\n\t\t\t\t\t\t<DashboardNavBar>\r\n\t\t\t\t\t\t\t<SidebarToggle />\r\n\t\t\t\t\t\t\t<NavBarMenu />\r\n\t\t\t\t\t\t</DashboardNavBar>\r\n\t\t\t\t\t\t<MainSideBar overflow>\r\n\t\t\t\t\t\t\t<SideBarMenu>\r\n\t\t\t\t\t\t\t\t<SideBarHeader\r\n\t\t\t\t\t\t\t\t\ttitle={'Viewer'}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t// this.props.toggleVisual('MAIN_NAV');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{this.props.sideBar || null}\r\n\t\t\t\t\t\t\t</SideBarMenu>\r\n\t\t\t\t\t\t</MainSideBar>\r\n\t\t\t\t\t\t<Content flex={this.props.flex}>{this.props.children}</Content>\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport interface CanvasWidgetProps {\r\n    color?: string;\r\n    background?: string;\r\n}\r\n\r\nexport const SContainer = styled.div<{ color: string; background: string }>`\r\n\t\theight: 100%;\r\n\t\tbackground-color: ${(p) => p.background};\r\n\t\tbackground-size: 50px 50px;\r\n\t\tdisplay: flex;\r\n\t\t> * {\r\n\t\t\theight: 100%;\r\n\t\t\tmin-height: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\t\tbackground-image: linear-gradient(\r\n\t\t\t\t0deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t),\r\n\t\t\tlinear-gradient(\r\n\t\t\t\t90deg,\r\n\t\t\t\ttransparent 24%,\r\n\t\t\t\t${(p) => p.color} 25%,\r\n\t\t\t\t${(p) => p.color} 26%,\r\n\t\t\t\ttransparent 27%,\r\n\t\t\t\ttransparent 74%,\r\n\t\t\t\t${(p) => p.color} 75%,\r\n\t\t\t\t${(p) => p.color} 76%,\r\n\t\t\t\ttransparent 77%,\r\n\t\t\t\ttransparent\r\n\t\t\t);\r\n\t`;\r\n\r\nexport default class CanvasWidget extends React.Component<CanvasWidgetProps> {\r\n    render() {\r\n        return (\r\n            <SContainer\r\n                background={this.props.background || 'rgb(60, 60, 60)'}\r\n                color={this.props.color || 'rgba(255,255,255, 0.05)'}>\r\n                {this.props.children}\r\n            </SContainer>\r\n        );\r\n    }\r\n}","export const NodeTypes = {\r\n\tConcept: 'concept',\r\n\tModel: 'model',\r\n\tDataSource: 'data-source',\r\n\tProperty: 'model-property',\r\n\tUserOfAgentType: 'UserOfAgentType',\r\n\tStateKey: 'StateKey',\r\n\tModelFilter: 'model-filter',\r\n\tStruct: 'struct',\r\n\tMethodApiParameters: 'method-api-parameters',\r\n\tEventHandler: 'EventHandler',\r\n\tComponentApiConnector: 'component-api-connector',\r\n\tScreenContainer: 'screen-container',\r\n\tScreenEffect: 'ScreenEffect',\r\n\tScreenEffectApi: 'ScreenEffectApi',\r\n\tRootNode: 'composition-rootNode',\r\n\tLeafNode: 'composition-leafNode',\r\n\tANDNode: 'composition-andNode',\r\n\tORNode: 'composition-orNode',\r\n\tContextualParameters: 'ContextualParameters',\r\n\tScreen: 'screen',\r\n\tEventMethod: 'EventMethod',\r\n\tNavigationAction: 'NavigationAction',\r\n\tNavigationScreen: 'NavigationScreen',\r\n\tLists: 'Lists',\r\n\tEventMethodInstance: 'EventMethodInstance',\r\n\tPermissionDataChain: 'PermissionDataChain',\r\n\tValidationDataChain: 'ValidationDataChain',\r\n\tExecutionDataChain: 'ExecutionDataChain',\r\n\tLifeCylceMethod: 'LifeCylceMethod',\r\n\tEventArgument: 'EventArgument',\r\n\tLifeCylceMethodInstance: 'LifeCylceMethodInstance',\r\n\tSelector: 'selector',\r\n\tComponentApi: 'ComponentApi',\r\n\tComponentExternalApi: 'ComponentExternalApi',\r\n\tScreenCollection: 'screen-collection',\r\n\tTitleService: 'titleService',\r\n\tScreenItem: 'screen-item',\r\n\tAttribute: 'attribute-property',\r\n\tChoiceList: 'choice-list',\r\n\tPermission: 'permission',\r\n\tMenuDataSource: 'MenuDataSource',\r\n\tConfiguration: 'configuration',\r\n\tPermissionDependency: 'permission-dependency',\r\n\tComponentNode: 'component-node',\r\n\tCondition: 'condition',\r\n\tModelItemFilter: 'model-item-filter',\r\n\tEnumeration: 'enumeration', //Basically a list of const string.\r\n\t// ChoiceListItem: 'choice-list-item',\r\n\tValidationList: 'validation-list',\r\n\tValidationListItem: 'validation-list-item',\r\n\tViewType: 'view-type',\r\n\tValidator: 'validator',\r\n\tExecutor: 'executor', // performs the final acts or data manipulation.\r\n\tOptionList: 'option-list',\r\n\tOptionListItem: 'option-list-item',\r\n\tOptionCustom: 'option-custom',\r\n\tScreenOption: 'screen-option',\r\n\tExtensionTypeList: 'extension-type-list',\r\n\tExtensionType: 'extension-type',\r\n\tFunction: 'function',\r\n\tMethod: 'method', //NGRX like effect\r\n\tAfterEffect: 'after-effect', // executes after a method finishes successfully.\r\n\tAction: 'action', //NGRX like action\r\n\tAgentAccessDescription: 'AgentAccessDescription', // Describes what agents will have access to in general.\r\n\tParameter: 'parameter',\r\n\tClaimService: 'ClaimService',\r\n\tFunctionOutput: 'function-output',\r\n\tController: 'controller',\r\n\tMaestro: 'maestro',\r\n\tServices: 'services',\r\n\tReferenceNode: 'referenceNode', //Is a standing for a node that is at a higher level,\r\n\tClassNode: 'class-node',\r\n\tDataChain: 'data-chain',\r\n\tServiceInterface: 'service-interface',\r\n\tDefaultValue: 'default-value',\r\n\tServiceInterfaceMethod: 'service-interface-method',\r\n\tViewModel: 'view-model',\r\n\tFetchService: 'FetchService',\r\n\tStyle: 'Style',\r\n\tTheme: 'Theme',\r\n\tDataChainCollection: 'DataChainCollection',\r\n\tPermissionTemplate: 'PermissionTemplate',\r\n\tConditionTemplate: 'ConditionTemplate'\r\n};\r\n\r\nexport const NodeTypeColors = {\r\n\t[NodeTypes.Concept]: '#DD4B39',\r\n\t[NodeTypes.ModelItemFilter]: '#4ECDC4',\r\n\t[NodeTypes.DefaultValue]: '#34EF2',\r\n\t[NodeTypes.ViewType]: '#412451',\r\n\t[NodeTypes.Model]: '#713E5A',\r\n\t[NodeTypes.Property]: '#484349',\r\n\t[NodeTypes.Screen]: '#3A405A',\r\n\t[NodeTypes.RootNode]: '#44CCFF',\r\n\t[NodeTypes.ANDNode]: '#35FF69',\r\n\t[NodeTypes.ORNode]: '#D138BF',\r\n\t[NodeTypes.Attribute]: '#414770',\r\n\t[NodeTypes.ChoiceList]: '#457B9D',\r\n\t[NodeTypes.ValidationList]: '#A8DADC',\r\n\t[NodeTypes.ValidationListItem]: '#EA526F',\r\n\t[NodeTypes.Selector]: '#20063B',\r\n\t[NodeTypes.OptionList]: '#2EC4B6',\r\n\t[NodeTypes.OptionListItem]: '#856A5D',\r\n\t[NodeTypes.MenuDataSource]: '#3B429F',\r\n\t[NodeTypes.OptionCustom]: '#403F4C',\r\n\t[NodeTypes.ExtensionTypeList]: '#2C2B3C',\r\n\t[NodeTypes.ExtensionType]: '#1B2432',\r\n\t[NodeTypes.Method]: '#BE95C4',\r\n\t[NodeTypes.Permission]: '#383F51',\r\n\t[NodeTypes.Function]: '#553D36',\r\n\t[NodeTypes.AgentAccessDescription]: '#2B59C3',\r\n\t[NodeTypes.Parameter]: '#684A52',\r\n\t[NodeTypes.FunctionOutput]: '#857885',\r\n\t[NodeTypes.Services]: '#59FFA0',\r\n\t[NodeTypes.ClassNode]: '#C3BAAA',\r\n\t[NodeTypes.Maestro]: '#780116',\r\n\t[NodeTypes.Condition]: '#CAFE48',\r\n\t[NodeTypes.Validator]: '#151522',\r\n\t[NodeTypes.ModelFilter]: '#312313',\r\n\t[NodeTypes.Executor]: '#2176FF',\r\n\t[NodeTypes.ReferenceNode]: '#F7B538',\r\n\t[NodeTypes.ScreenCollection]: '#A9DBB8',\r\n\t[NodeTypes.ScreenItem]: '#020887',\r\n\t[NodeTypes.ScreenContainer]: '#60B2E5',\r\n\t[NodeTypes.ComponentNode]: '#B7245C',\r\n\t[NodeTypes.DataSource]: '#002500',\r\n\t[NodeTypes.Condition]: '#F90093',\r\n\t[NodeTypes.DataChain]: '#FF6B6B',\r\n\t[NodeTypes.ServiceInterface]: '#4A6D7C',\r\n\t[NodeTypes.MethodApiParameters]: '#ff0001',\r\n\t[NodeTypes.ComponentApi]: '#E2C044',\r\n\t[NodeTypes.ComponentExternalApi]: '#2E5266',\r\n\t[NodeTypes.NavigationAction]: '#1282A2',\r\n\t[NodeTypes.NavigationScreen]: '#148222',\r\n\t[NodeTypes.Lists]: '#2DC7FF',\r\n\t[NodeTypes.ClaimService]: '#034748',\r\n\t[NodeTypes.FetchService]: '#BA1200',\r\n\t[NodeTypes.Style]: '#f12100',\r\n\t[NodeTypes.DataChainCollection]: '#2191FB'\r\n};\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { NodeProject, ImageProject, NodeProperties } from './interfaces';\r\nimport { NodeTypeColors, NodeTypes } from './nodestuff';\r\nimport Game from './Game';\r\n\r\nexport default class Details extends React.Component<{ currentPart: NodeProject; }, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\tgetExtraInformation(currentPart: NodeProject | undefined) {\r\n\t\tif (currentPart) {\r\n\t\t\tswitch (currentPart.properties.nodeType) {\r\n\t\t\t\tcase NodeTypes.Concept:\r\n\t\t\t\t\treturn this.getConceptExplanation(currentPart);\r\n\t\t\t\tcase NodeTypes.Model:\r\n\t\t\t\t\treturn this.getModelExplanation();\r\n\t\t\t\tcase NodeTypes.AgentAccessDescription:\r\n\t\t\t\t\treturn this.getAgentAccessDescription();\r\n\t\t\t\tcase NodeTypes.DataChain:\r\n\t\t\t\t\treturn this.getDataChainDescription();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetDataChainDescription() {\r\n\t\treturn (\r\n\t\t\t<div className=\"description\">Data chains turn into code, that excutes its defined functionality. This is as close to the code as Red Quick Builder gets.</div>\r\n\t\t)\r\n\t}\r\n\tgetAgentAccessDescription() {\r\n\t\treturn (\r\n\t\t\t<div className=\"description\">\r\n\t\t\t\tThese nodes describe the access granted to an agent in the system. The relationships described in these\r\n\t\t\t\tnodes tells us what agents can or cannot do. These nodes will ultimately generate the majority of the\r\n\t\t\t\tfunctionality.\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tgetModelExplanation() {\r\n\t\treturn (\r\n\t\t\t<div className=\"description\">\r\n\t\t\t\tModels represent concrete ideas in the app. For example a \"Work Item\" may have properties representing\r\n\t\t\t\tthe name, description or state. The models are the backbone and first thing created for the application.\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tgetSummary(summary: any) {\r\n\t\tif (!summary) {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t\treturn <ul>{summary.map((v: string) => <li key={v}>{v}</li>)}</ul>;\r\n\t}\r\n\tgetStructuredSummary(summary: any) {\r\n\t\tif (!summary) {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3 key={summary.name}>{summary.name}</h3>\r\n\t\t\t\t{this.getSummary(summary.parts)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tgetConceptExplanation(currentPart: NodeProject | undefined) {\r\n\t\tlet executionSumary = <p>No execution steps described</p>;;\r\n\t\tif (\r\n\t\t\tcurrentPart &&\r\n\t\t\tcurrentPart.properties &&\r\n\t\t\tcurrentPart.properties.ExecutionSummary &&\r\n\t\t\tcurrentPart.properties.ExecutionSummary.length\r\n\t\t) {\r\n\t\t\texecutionSumary = this.getStructuredSummary({\r\n\t\t\t\tname: '',\r\n\t\t\t\tparts: currentPart.properties.ExecutionSummary\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet permissionSummary = <p>No permissions described</p>;;\r\n\t\tif (currentPart && currentPart.properties && currentPart.properties.PermissionSummary) {\r\n\t\t\tpermissionSummary = currentPart.properties.PermissionSummary.map((v: any) => this.getStructuredSummary(v));\r\n\t\t}\r\n\r\n\t\tlet validationSummary = <p>No validation described</p>;\r\n\t\tif (currentPart && currentPart.properties && currentPart.properties.ValidationSummary) {\r\n\t\t\tvalidationSummary = currentPart.properties.ValidationSummary.map((v: any) => this.getStructuredSummary(v));\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\t<h2 key='permission'>Permission</h2>,\r\n\t\t\tpermissionSummary,\r\n\t\t\t<h2 key='validation'>Validation</h2>,\r\n\t\t\tvalidationSummary,\r\n\t\t\t<h2 key='execution'>Execution</h2>,\r\n\t\t\texecutionSumary\r\n\t\t];\r\n\t}\r\n\trender() {\r\n\t\tlet { currentPart } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"details\">\r\n\t\t\t\t<div className=\"detail-header\">\r\n\t\t\t\t\t<div className=\"detail-information\">{this.getExtraInformation(currentPart)}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nfunction groupBy(xs: any[], key: Function) {\r\n\treturn xs.reduce(function (rv, x) {\r\n\t\t(rv[key(x)] = rv[key(x)] || []).push(x);\r\n\t\treturn rv;\r\n\t}, {});\r\n}\r\n\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport createEngine, { DefaultPortModel, PathFindingLinkFactory, DagreEngine, DefaultNodeModel, DiagramEngine } from '@projectstorm/react-diagrams';\r\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\r\nimport DemoCanvasWidget from './canvaswidget';\r\nimport * as SRD from '@projectstorm/react-diagrams';\r\nimport styled from '@emotion/styled';\r\nimport { GetNodeProp, GetNodeTitle, LinkPropertyKeys, NodeProperties } from './util';\r\nimport { GetLinkProperty, Node } from './util';\r\nimport { NodeTypeColors } from './nodestuff';\r\nimport Details from './Details';\r\n\r\nexport const SBody = styled.div`\r\nflex-grow: 1;\r\ndisplay: flex;\r\nflex-direction: column;\r\nmin-height: 100%;\r\n`;\r\n\r\nexport const SHeader = styled.div`\r\ndisplay: flex;\r\nbackground: rgb(30, 30, 30);\r\nflex-grow: 0;\r\nflex-shrink: 0;\r\ncolor: white;\r\nfont-family: Helvetica, Arial, sans-serif;\r\npadding: 10px;\r\nalign-items: center;\r\n`;\r\n\r\nexport const SContent = styled.div`\r\ndisplay: flex;\r\nflex-grow: 1;\r\n`;\r\n\r\nexport const SLayer = styled.div`\r\nposition: relative;\r\nflex-grow: 1;\r\n`;\r\n\r\nexport const SFLayer = styled.div`\r\nposition: relative;\r\nflex: 1;\r\nmax-width: 600px;\r\n`;\r\n\r\n\r\nexport function GUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16) | 0;\r\n\r\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\nconst context: any = {};\r\nexport function callAutoDistribute() {\r\n    context.autoDistribute();\r\n}\r\nexport default class GraphView extends Component<any, any> {\r\n    engine: DagreEngine;\r\n    constructor(props: any) {\r\n        super(props);\r\n        let id = GUID();\r\n        this.engine = new DagreEngine({\r\n            graph: {\r\n                rankdir: 'RL',\r\n                ranker: 'longest-path',\r\n                marginx: 25,\r\n                marginy: 25,\r\n                nodesep: 10\r\n            },\r\n            includeLinks: true\r\n        });\r\n        context.autoDistribute = this.autoDistribute.bind(this);\r\n        let setup = this.newModel();\r\n        this.state = { ...setup, id };\r\n    }\r\n\r\n\r\n    public newModel(): {\r\n        activeModel: SRD.DiagramModel,\r\n        engine: DiagramEngine\r\n    } {\r\n        let activeModel = new SRD.DiagramModel();\r\n        let engine = createEngine();\r\n        // register some other factories as well \r\n\r\n        let diagramEngine = engine;\r\n        diagramEngine.setModel(activeModel);\r\n\r\n\r\n\r\n        return {\r\n            activeModel,\r\n            engine\r\n        }\r\n    }\r\n    autoDistribute = () => {\r\n        this.engine.redistribute(this.state.activeModel);\r\n\r\n        // only happens if pathfing is enabled (check line 25)\r\n        this.reroute();\r\n        this.state.engine.repaintCanvas();\r\n    };\r\n\r\n\r\n    reroute() {\r\n        (this.state.engine as DiagramEngine)\r\n            .getLinkFactories()\r\n            .getFactory<PathFindingLinkFactory>(PathFindingLinkFactory.NAME)\r\n            .calculateRoutingMatrix();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps: any, prevState: any, snapshot: any) {\r\n        if (this.props.graphViewPackage !== prevProps.graphViewPackage) {\r\n            let { graphViewPackage } = this.props;\r\n            if (graphViewPackage) {\r\n                this.setupGraphView(graphViewPackage);\r\n                setTimeout(() => {\r\n                    this.autoDistribute();\r\n                }, 500);\r\n            }\r\n        }\r\n    }\r\n    private setupGraphView(graphViewPackage: any) {\r\n        let { activeModel } = this.state;\r\n        let { links, nodes } = graphViewPackage;\r\n        let me = this;\r\n        if (nodes) {\r\n            let dnodes: any = {};\r\n            nodes.forEach((node: any) => {\r\n                let dnode: any = this.createNode(GetNodeTitle(node), node);\r\n                dnodes[node.id] = dnode;\r\n            });\r\n            activeModel.getNodes().forEach((node: any) => {\r\n                activeModel.removeNode(node);\r\n            });\r\n            activeModel.getLinks().forEach((link: any) => {\r\n                activeModel.removeLink(link);\r\n            })\r\n\r\n            nodes.forEach((node: any, index: number) => {\r\n                dnodes[node.id].setPosition(index * 70, index * 70);\r\n                let item = activeModel.addNode(dnodes[node.id]);\r\n                item.registerListener({\r\n                    eventDidFire: function (a: { function: string }) {\r\n                        if (a.function === 'selectionChanged') {\r\n                            me.setState({ currentNode: node.id })\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n            if (links) {\r\n                links.forEach((link: any) => {\r\n                    let newLink = this.connectNodes(dnodes[link.source], dnodes[link.target], link);\r\n                    if (newLink)\r\n                        activeModel.addLink(newLink);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    connectNodes(nodeFrom: any, nodeTo: any, link: any) {\r\n        if (!nodeFrom || !nodeTo) { return false; }\r\n        //just to get id-like structure\r\n        const portOut = nodeFrom.addPort(new DefaultPortModel(true, `${nodeFrom.name}-out-${GUID()}`, GetLinkProperty(link, LinkPropertyKeys.TYPE) || 'Out'));\r\n        const portTo = nodeTo.addPort(new DefaultPortModel(false, `${nodeTo.name}-to-${GUID()}`, GetLinkProperty(link, LinkPropertyKeys.TYPE) || 'IN'));\r\n        return portOut.link(portTo);\r\n\r\n        // ################# UNCOMMENT THIS LINE FOR PATH FINDING #############################\r\n        // return portOut.link(portTo, engine.getLinkFactories().getFactory(PathFindingLinkFactory.NAME));\r\n        // #####################################################################################\r\n    }\r\n\r\n    createNode(name: string, node: any): any {\r\n        return new DefaultNodeModel(name, NodeTypeColors[GetNodeProp(node, NodeProperties.NODEType)] || 'rgb(0,192,255)');\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.autoDistribute();\r\n        }, 500);\r\n    }\r\n    render() {\r\n\r\n        let { engine } = this.state;\r\n        if (!engine) {\r\n            return <div></div>\r\n        }\r\n        let details: any = null;\r\n        if (this.props.graphViewPackage) {\r\n            if (this.state.currentNode) {\r\n                let { nodes }: { nodes: Node[] } = this.props.graphViewPackage;\r\n                let currentNode: Node | undefined = nodes.find((node: Node) => node.id === this.state.currentNode);\r\n                if (currentNode) {\r\n                    details = <Details currentPart={{ properties: currentNode.properties }} />\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <SBody>\r\n                <SHeader>\r\n                    <div className=\"title\" onClick={() => {\r\n                        this.autoDistribute();\r\n                    }}>{this.props.title || ''}</div>\r\n                </SHeader>\r\n                <SContent>\r\n                    <SLayer\r\n                        onDrop={() => {\r\n                        }}\r\n                        onDragOver={(event: any) => {\r\n                            event.preventDefault();\r\n                        }}>\r\n                        <DemoCanvasWidget>\r\n                            <CanvasWidget engine={engine} />\r\n                        </DemoCanvasWidget>\r\n                    </SLayer>\r\n                    <SFLayer>\r\n                        {details}\r\n                    </SFLayer>\r\n                </SContent>\r\n            </SBody>\r\n        );\r\n    }\r\n}\r\n","export default [{\"nodeType\":\"model\",\"name\":\"User\",\"url\":\"model--User.json\"},{\"nodeType\":\"model\",\"name\":\"Profile\",\"url\":\"model--Profile.json\"},{\"nodeType\":\"model\",\"name\":\"Media\",\"url\":\"model--Media.json\"},{\"nodeType\":\"enumeration\",\"name\":\"MediaType\",\"url\":\"enumeration--MediaType.json\"},{\"nodeType\":\"model\",\"name\":\"Media List\",\"url\":\"model--MediaList.json\"},{\"nodeType\":\"model\",\"name\":\"Media List Item\",\"url\":\"model--MediaListItem.json\"},{\"nodeType\":\"model\",\"name\":\"Thumbnail\",\"url\":\"model--Thumbnail.json\"},{\"nodeType\":\"model\",\"name\":\"Processed Media\",\"url\":\"model--ProcessedMedia.json\"},{\"nodeType\":\"model\",\"name\":\"Processed Media States\",\"url\":\"model--ProcessedMediaStates.json\"}]; ","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewMenu extends Component<any, any> {\r\n\tactive() {\r\n\t\treturn this.props.active ? 'active' : '';\r\n\t}\r\n\tgreyed() {\r\n\t\treturn this.props.greyed ? { color: '#aaaaaa' } : {};\r\n\t}\r\n\topen() {\r\n\t\treturn this.props.open ? 'menu-open' : '';\r\n\t}\r\n\tdisplay() {\r\n\t\treturn this.props.open ? 'block' : 'block';\r\n\t}\r\n\ticon() {\r\n\t\treturn this.props.icon || (this.props.children ? 'fa fa-folder' : null) || 'fa fa-wrench';\r\n\t}\r\n\tcolor() {\r\n\t\treturn this.props.color ? { color: this.props.color } : {};\r\n\t}\r\n\terror(): any {\r\n\t\treturn this.props.error ? { color: '#dd4b39', fontWeight: 'bold' } : {};\r\n\t}\r\n\thide() {\r\n\t\treturn this.props.hide;\r\n\t}\r\n\trender() {\r\n\t\tif (this.hide()) {\r\n\t\t\treturn <li className={`treeview ${this.active()}`} />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<li title={this.props.description} className={`treeview ${this.active()} ${this.open()}`}>\r\n\t\t\t\t<a\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (this.props.toggle) this.props.toggle();\r\n\t\t\t\t\t\tif (this.props.onClick) {\r\n\t\t\t\t\t\t\tthis.props.onClick();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.hideIcon ? null : <i style={{ ...this.error() }} className={`${this.icon()}`} />}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{ ...this.color(), ...this.greyed(), ...this.error() }}\r\n\t\t\t\t\t\ttitle={this.props.description || this.props.title}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.props.title}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{this.props.hideArrow || !this.props.children ? null : (\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"pull-right-container\"\r\n\t\t\t\t\t\t\tonClick={(evt) => {\r\n\t\t\t\t\t\t\t\tif (this.props.onRightClick) {\r\n\t\t\t\t\t\t\t\t\tthis.props.onRightClick();\r\n\t\t\t\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-angle-left pull-right\" />\r\n\t\t\t\t\t\t\t{this.props.right ? this.props.right : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!this.props.hideArrow && this.props.right ? null : (\r\n\t\t\t\t\t\t<span className=\"pull-right-container\">{this.props.right ? this.props.right : null}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</a>\r\n\t\t\t\t<ul className=\"treeview-menu\" style={{ display: this.display(), ...this.props.innerStyle || {} }}>\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\n\r\nexport default class TreeViewItemContainer extends Component<any, any> {\r\n\ticon() {\r\n\t\treturn this.props.icon || 'fa fa-circle-o';\r\n\t}\r\n\thide() {\r\n\t\treturn this.props.hide;\r\n\t}\r\n\trender() {\r\n\t\tif (this.hide()) {\r\n\t\t\treturn <li />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t{this.props.title}\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class TextInput extends Component<any, any> {\r\n\tinputType: any;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\tlabel() {\r\n\t\treturn this.props.label || '{label}';\r\n\t}\r\n\r\n\timmediate() {\r\n\t\treturn this.props.immediate || false;\r\n\t}\r\n\r\n\tvalue() {\r\n\t\tif (this.immediate()) {\r\n\t\t\treturn this.props.value || '';\r\n\t\t}\r\n\t\treturn this.state.value || '';\r\n\t}\r\n\r\n\tplaceholder() {\r\n\t\treturn this.props.placeholder || '';\r\n\t}\r\n\r\n\tdisabled() {\r\n\t\treturn this.props.disabled ? 'disabled' : '';\r\n\t}\r\n\r\n\tlight() {\r\n\t\treturn this.props.light ? { color: 'white' } : {};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.immediate()) {\r\n\t\t\tthis.setState({ value: this.props.value });\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: any) {\r\n\t\tif (!this.immediate()) {\r\n\t\t\tif (!this.state.focused)\r\n\t\t\t\tif (this.state.value !== this.props.value) {\r\n\t\t\t\t\tthis.setState({ value: this.props.value });\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst handleKeyPress = (event: { key: string }) => {\r\n\t\t\tif (!this.immediate()) {\r\n\t\t\t\tif (event.key === 'Enter') {\r\n\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\tthis.props.onChange(this.state.value || '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (this.props.textarea) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={this.props.inputgroup ? 'input-group' : 'form-group'}>\r\n\t\t\t\t\t{this.props.inputgroup ? null : <label>{this.label()}</label>}\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tdisabled={this.disabled() ? true : false}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tstyle={{ minHeight: 150 }}\r\n\t\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\t\tif (this.props.onBlur) {\r\n\t\t\t\t\t\t\t\tthis.props.onBlur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!this.immediate()) {\r\n\t\t\t\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\t\t\t\tif (this.state.value !== this.props.value)\r\n\t\t\t\t\t\t\t\t\t\tthis.props.onChange(this.state.value || '');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.props.onChanged) {\r\n\t\t\t\t\t\t\t\tthis.props.onChanged(this.state.value || '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.setState({ focused: false });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\t\tif (this.props.onFocus) {\r\n\t\t\t\t\t\t\t\tthis.props.onFocus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.setState({ focused: true });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalue={this.value()}\r\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\t\t\tonChange={(v) => {\r\n\t\t\t\t\t\t\tif (this.props.onChangeText) {\r\n\t\t\t\t\t\t\t\tthis.props.onChangeText(v.target.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.immediate()) {\r\n\t\t\t\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\t\t\t\tthis.props.onChange(v.target.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.setState({ value: v.target.value });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tplaceholder={this.placeholder()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.props.inputgroup ? (\r\n\t\t\t\t\t\t<span className=\"input-group-btn\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (this.props.onClick) {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.onClick();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"search\"\r\n\t\t\t\t\t\t\t\tid=\"search-btn\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-flat\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-edit\" />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={this.props.inputgroup ? 'input-group' : 'form-group'}>\r\n\t\t\t\t{this.props.inputgroup || this.props.slim ? null : <label style={this.light()}>{this.label()}</label>}\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={this.inputType || 'text'}\r\n\t\t\t\t\tdisabled={this.disabled() ? true : false}\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tonBlur={() => {\r\n\t\t\t\t\t\tif (this.props.onBlur) {\r\n\t\t\t\t\t\t\tthis.props.onBlur();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!this.immediate()) {\r\n\t\t\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\t\t\tif (this.state.value !== this.props.value) this.props.onChange(this.state.value || '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.props.onChanged) {\r\n\t\t\t\t\t\t\tthis.props.onChanged(this.props.value || '');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({ focused: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonFocus={() => {\r\n\t\t\t\t\t\tif (this.props.onFocus) {\r\n\t\t\t\t\t\t\tthis.props.onFocus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({ focused: true });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={this.value()}\r\n\t\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\t\tonChange={(v) => {\r\n\t\t\t\t\t\tif (this.props.onChangeText) {\r\n\t\t\t\t\t\t\tthis.props.onChangeText(v.target.value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.immediate()) {\r\n\t\t\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\t\t\tthis.props.onChange(v.target.value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.setState({ value: v.target.value });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder={this.placeholder()}\r\n\t\t\t\t/>\r\n\t\t\t\t{this.props.inputgroup ? (\r\n\t\t\t\t\t<span className=\"input-group-btn\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tif (this.props.onClick) {\r\n\t\t\t\t\t\t\t\t\tthis.props.onClick();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.props.onChange) {\r\n\t\t\t\t\t\t\t\t\tthis.props.onChange(this.state.value);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-flat\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-edit\" />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport { GetNodeProp, groupBy, NodeProperties } from './util';\r\nimport DashboardContainer from './dashboardcontainer';\r\nimport GraphView, { callAutoDistribute } from './graphview';\r\nimport Projects from './project';\r\nimport TreeViewMenu from './treeviewmenu';\r\nimport TreeViewItemContainer from './treeviewitemcontainer';\r\nimport TextInput from './textinput';\r\nconst relativePath = './img';\r\nexport default class GraphViewer extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    componentDidMount() {\r\n        let project: any = Projects[0].url;\r\n        if (project) {\r\n            fetch(`${relativePath}/${project}`).then((res) => {\r\n                res.json().then((obj) => {\r\n                    this.setState({ graphViewPackage: obj, name: Projects[0].name })\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let graphViewPackage = this.state.graphViewPackage || null;\r\n\r\n        return (\r\n            <DashboardContainer flex minified sideBar={this.getSideBar()} >\r\n                <GraphView title={this.state.name} graphViewPackage={graphViewPackage} />\r\n            </DashboardContainer>\r\n        );\r\n    }\r\n    getSideBar() {\r\n        let result = [];\r\n        let items: any[] = Projects.filter((project: { name: string }) => !this.state.filter || project.name.toLowerCase().indexOf(this.state.filter.toLowerCase()) !== -1);\r\n        let groups = groupBy(items, (v: { nodeType: string }) => v.nodeType);\r\n        result.push(<TreeViewMenu active open  title=\"Menu\">\r\n            <TreeViewItemContainer>\r\n                <TextInput value={this.state.filter} immediate label={'filter'} onChange={(val: string) => {\r\n                    this.setState({ filter: val })\r\n                }} />\r\n            </TreeViewItemContainer>\r\n            {Object.entries(groups).map((item: any[]) => {\r\n                let [key, value] = item;\r\n                return (<TreeViewMenu active open={this.state[key]} title={key} onClick={() => {\r\n                    this.setState({ [key]: !this.state[key] })\r\n                }}>\r\n                    {value.map((project: { url: string, name: string }) => {\r\n                        return <TreeViewMenu key={project.name} title={project.name} onClick={() => {\r\n                            var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?' + project.name;\r\n                            window.history.pushState({ path: newurl }, '', newurl);\r\n                            fetch(`${relativePath}/${project.url}`).then((res) => {\r\n                                res.json().then((obj) => {\r\n                                    this.setState({ graphViewPackage: obj, name: project.name }, () => {\r\n                                        callAutoDistribute();\r\n                                    })\r\n                                })\r\n                            })\r\n                        }} />\r\n                    })}\r\n                </TreeViewMenu>)\r\n            })\r\n            }\r\n        </TreeViewMenu>)\r\n        return result;\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Project from './project';\r\nimport GraphViewer from './graphviewer';\r\nclass App extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<GraphViewer />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}